


#include "TM4C123GH6PM.h"

int main(void)
{
  unsigned int adc_value;  //Store the ADC Value 0-4095
  unsigned int curr_digit; //Iterator through digitPattern[]
  
     //List of HEX codes for 7-Segment Digits
  unsigned char digitPattern[] = {0xC0,0xF9,0xA4,0xB0,0x99,0x92,0x82,0xF8,0x80,0x90,0x88,0x83,0xC6,0xA1,0x86,0x8E,0xFF};  //List of Hex Code for Digits
  
  //PORT B Initialization
  SYSCTL->RCGCGPIO |= (1<<1); //PORT B Clock Active
  GPIOB->DEN = 0xFF;          //PORT B all pins OUTPUT
  GPIOB->DIR = 0xFF;
 
    /* Enable Clock to ADC0 and GPIO pins*/
    SYSCTL->RCGCADC |= (1<<0);    /* AD0 clock enable*/
    
    /* initialize PE3 for AIN0 input  */
  SYSCTL->RCGCGPIO |= (1<<4);   /* Enable Clock to GPIOE or PE3/AN0 */
    GPIOE->AFSEL |= (1<<3);       /* enable alternate function */
    GPIOE->DEN &= ~(1<<3);        /* disable digital function */
    GPIOE->AMSEL |= (1<<3);       /* enable analog function */
   
    /* initialize sample sequencer3 (no bits need to be changed below)*/
    ADC0->ACTSS &= ~(1<<3);        
    ADC0->EMUX &= ~0xF000;    
    ADC0->SSMUX3 = 0;        
    ADC0->SSCTL3 |= (1<<1)|(1<<2);        
    ADC0->ACTSS |= (1<<3);         /* enable ADC0 sequencer 3 */
  
    while(1)
    {
        ADC0->PSSI |= (1<<3);          
        while((ADC0->RIS & 8) == 0) ;   
        adc_value = ADC0->SSFIFO3;    
        ADC0->ISC = 8;              
   

    //update curr_digit here
    //use GPIOB->DATA to write value on PORTB 7-Segment from Array based on curr_digit
    curr_digit = adc_value/256;
    GPIOB->DATA = digitPattern[curr_digit];
    }          
}
