#include <TM4C123.h>
#define GPIO_PORTB_CLK_EN  0x02      //enable clock for PORTB

void Delay(unsigned int);
void PORTB_Init(void);       

int main(void)
{
    // Hex codes for digits 0-F based on the 7-segment common anode display
    digit_display[] = {0xC0, 0xF9, 0xA4, 0xB0, 0x99, 0x92, 0x82, 0xF8, 0x80, 0x90, 0x88, 0x83, 0xC6, 0xA1, 0x86, 0x8E };  //List of Hex Code for Digits from zero to the letter F

    PORTB_Init(); //PORTB Initialization

    while(1)
    {
        // Iterate through the digits to display starting from "0" - "F" with Delay of 2 Seconds
        for(int i = 0; i < 10; i++) {
            GPIO_PORTB_DATA_R = digit_display[i]; // Write the digit to the 7-segment display
            Delay(500); // to achieve a 2-second delay (500 * 4 ms = 2000 ms)
        }
    }
}

void Delay(unsigned int delay)
{
    volatile unsigned int i, counter;
    counter = delay * 4000;  // 1 second (1000 msec) needs 40000000 counter so 4000000/1000 = 4000
    for(i=0;i<counter;i++);
}

void PORTB_Init(void)
{
  SYSCTL_RCGCGPIO_R |= GPIO_PORTB_CLK_EN;       //activate clock for Port B
  Delay(10);                //Delay 10 msec to allow clock to start on PORTB  
  GPIO_PORTB_DEN_R = 0xFF;             // Enable all pins of PORTB 
  GPIO_PORTB_DIR_R = 0xFF;             // Make all pins of PORTB as output pins
  GPIO_PORTB_PCTL_R &= ~(0xFF);    // Regular GPIO of PORTB
  GPIO_PORTB_AMSEL_R &= ~(0xFF);          // Disable analog function on all pins of PORTB
  GPIO_PORTB_AFSEL_R &= ~(0xFF);          // Regular port function
}
